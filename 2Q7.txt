model:
sets:
  Number/1..43/: numbers, lengths;
  Width_need_rank1/1..2/:width_need_rank_1;

  !TODO:模式i: 1..m;
  X/1..m/: x_model;

endsets

data:
 
  width_need_rank_1 = 13, 22;
  numbers = 24	6	12	24	24	6	24	1001	20	108 
			90	40	12	12	68	54	10	12	270	90 
			90	612	508	2082	496	24	62	20	162	92 
			40	24	40	180	536	12	128	686	2002	686 
			 692	357	52;

  lengths = 1105	1055	1046	1032	1030	975	893	882	847	845
			830	795	766	745	732	719	714	690	665	633
			630	600	590	588	582	578	540	488	455	434
			420	415	414	411	405	328	313	290	275	265
			255	184	155;

enddata

!目标函数;
min = cost;
cost = @sum(X(i): x_model(i));

!约束条件;
@for(Width_need_rank1(j):
   @sum(X(i): x_model(i)*r(width_need_rank_1(j), i)) = numbers(width_need_rank_1(j)));

@for(X(i):
   @sum(Width_need_rank1(j):
    lengths(Width_rank1(j))*r(width_need_rank_1(j), i)) >= 328);

@for(X(i):
   @sum(Width_need_rank1(j):
    lengths(Width_rank1(j))*r(width_need_rank_1(j), i)) <= 3000);

@for(Number(j): @for(X(i): @gin(r(j, i))));

@for(X(i): @gin(x_model(i)));

!迭代限制条件 ;
@for(X(i) | i #lt# 2: x_model(i) < x_model(i+1)); 

!matlab计算的最大最小耗费 ;
@bnd(126, cost, 128);

end