!目标：求6天内完成的下料中，cost最小的下料方式数 n -> n 由初值k 模拟退火算法取得(k为4天完成的最佳下料方式数, m >= n);
model:
!决策变量 n=20 ;
sets:
  Number/1..53/: numbers, lengths;

!模式i: 1..n;
  X/1..n/: x_model;

!需完成的工料编号 ;

  Waiting/1..20/: wait;
  

!r(j,i):第i中模式下j中材料所需数量;
  Relation(Number, X): r;
endsets

data:
  wait = 5,7,9,12,15,18,20,25,28,36,48,
         4,11,24,29,32,38,40,46,50;
  numbers = 4,216,104,38,4,60,4,8,6,10,
         8,2,4,8,8,2,8,301,6,38,
         30,8,4,4,34,18,4,4,90,30,
         30,212,108,482,196,8,32,4,52,42,
         8,8,8,60,136,4,68,286,502,286,
         292,57,24;

  lengths = 1743,1680,1532,1477,1313,1285,1232,1217,1180,1177,
         1105,1055,1046,1032,1030,975,893,882,847,845,
         830,795,766,745,732,719,714,690,665,633,
         630,600,590,588,582,578,540,488,455,434,
         420,415,414,411,405,328,313,290,275,265,
         255,184,155;
!最佳n值所求的下料方式,其余待求 ;
r = ;
enddata

!目标函数;
min = cost;
cost = @sum(X(i): x_model(i));

!约束条件;
@for(Waiting(j):
   @sum(X(i): x_model(i)*r(wait(j), i)) = numbers(wait(j)));

@for(X(i):
   @sum(Waiting(j): (5+lengths(wait(j)))*r(wait(j), i))-5  <= 3000);

@for(X(i):
   @sum(Waiting(j): (5+lengths(wait(j)))*r(wait(j), i))-5  >= 155);

@for(Number(j): @for(X(i): @gin(r(j, i))));

@for(X(i): @gin(x_model(i)));

@sum(X(i): x_model)<= 600;

!迭代限制条件 ;
@for(X(i) | i #lt# 53: x_model(i) < x_model(i+1)); 

!matlab计算的最大最小耗费 ;
@bnd(265, cost, 303);

end
