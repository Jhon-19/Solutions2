model:
sets:
  Number/1..43/: numbers, lengths;
  Width/1..43/:width;
  Width_rank4/1..2/:width_rank_4;

  !TODO:模式i: 1..m;
  X/1..m/: x_model;

endsets

data:
 
  width_rank_4 = 13,22;
  numbers = 4,216,104,38,4,60,4,8,6,10,
         8,2,4,8,8,2,8,301,6,38,
         30,8,4,4,34,18,4,4,90,30,
         30,212,108,482,196,8,32,4,52,42,
         8,8,8,60,136,4,68,286,502,286,
         292,57,24;

  lengths = 1743,1680,1532,1477,1313,1285,1232,1217,1180,1177,
         1105,1055,1046,1032,1030,975,893,882,847,845,
         830,795,766,745,732,719,714,690,665,633,
         630,600,590,588,582,578,540,488,455,434,
         420,415,414,411,405,328,313,290,275,265,
         255,184,155;

 width = 30,20,50,30,20,50,30,20,30,30,
        30,20,35,30,30,30,50,30,20,30,
        30,35,20,20,30,20,50,20,20,30,
        20,30,20,30,20,30,50,30,20,30,
        30,20,50;

enddata

!目标函数;
min = cost;
cost = @sum(X(i): x_model(i));

!约束条件;
@for(Width_rank4(j):
   @sum(X(i): x_model(i)*r(width_rank_4(j), i)) = numbers(width_rank_4(j)));

@for(X(i):
   @sum(Width_rank4(j):
    lengths(Width_rank4(j))*r(width_rank_4(j), i)) >= 155);

@for(X(i):
   @sum(Width_rank4(j):
    lengths(Width_rank4(j))*r(width_rank_4(j), i)) <= 3000);

@for(Number(j): @for(X(i): @gin(r(j, i))));

@for(X(i): @gin(x_model(i)));


!迭代限制条件 ;
@for(X(i) | i #lt# 53: x_model(i) < x_model(i+1)); 

!matlab计算的最大最小耗费 ;
@bnd(4, cost, 6);

!#TODO 
 r = ;
end